<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.EmpMapper">
    <update id="updateById">
        UPDATE emp
        <set>
            <if test="username!= null and username!= ''">username = #{username},</if>
            <if test="password!= null and password!= ''">password = #{password},</if>
            <if test="name!= null and name!= ''">name = #{name},</if>
            <if test="gender!= null">gender = #{gender},</if>
            <if test="phone!= null and phone!= ''">phone = #{phone},</if>
            <if test="job!= null">job = #{job},</if>
            <if test="salary!= null">salary = #{salary},</if>
            <if test="image!= null and image!= ''">image = #{image},</if>
            <if test="entryDate!= null">entry_date = #{entryDate},</if>
            <if test="deptId!= null">dept_id = #{deptId},</if>
            <if test="updateTime!= null">update_time = #{updateTime}</if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteByIds">
        delete from emp where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="list" resultType="org.example.pojo.Emp">
        select e.*,d.name deptName from emp e left join dept d on e.dept_id=d.id

        <where>
            <if test="name != null and name != ''">
                e.name like concat('%',#{name},'%')
            </if>
            <if test="gender != null">
                and e.gender = #{gender}
            </if>
            <if test="begin != null and end != null">
                and e.entry_date between #{begin} and #{end}
            </if>
        </where>

        order by e.update_time desc
    </select>


    <resultMap id="empResultMap" type="org.example.pojo.Emp">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="phone" property="phone"/>
        <result column="job" property="job"/>
        <result column="salary" property="salary"/>
        <result column="image" property="image"/>
        <result column="entry_date" property="entryDate"/>
        <result column="dept_id" property="deptId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>

        <collection property="exprList" ofType="org.example.pojo.EmpExpr">
            <id column="ee_id" property="id"/>
            <result column="ee_empid" property="empId"/>
            <result column="ee_begin" property="begin"/>
            <result column="ee_end" property="end"/>
            <result column="ee_company" property="company"/>
            <result column="ee_job" property="job"/>
        </collection>
    </resultMap>

    <select id="getById" resultMap="empResultMap">
        select e.*,
        ee.id ee_id,
        ee.emp_id ee_empid,
        ee.begin ee_begin,
        ee.end ee_end,
        ee.company ee_company,
        ee.job ee_job
        from emp e left join emp_expr ee on e.id=ee.emp_id where e.id=#{id}
    </select>
    <select id="countEmpJobData" resultType="java.util.Map">
        select
        (case when job=1 then '班主任'
        when job=2 then '讲师'
        when job=3 then '学工主管'
        when job=4 then '教研主管'
        when job=5 then '咨询师'
        else '其他' end) pos,
        count(*) num
        from emp group by job order by num
    </select>
    <select id="countEmpGenderData" resultType="java.util.Map">
        select
        if(gender=1,'男性员工','女性员工') name,
        count(*) value
        from emp group by gender
    </select>
    <select id="getStudentCountData" resultType="java.util.Map">
        select
        (case
        when clazz_id = 1 then '前端就业90期'
        when clazz_id = 2 then 'JavaEE就业165期'
        when clazz_id = 3 then 'java外卖'
        when clazz_id = 4 then 'web开发'
        when clazz_id = 5 then '计算机用到度'  -- 这里“计算机用到度”表述可能不太准确，你可以按需调整
        when clazz_id = 6 then 'java虚拟机'
        when clazz_id = 8 then 'JavaEE就业166期'
        else '其他' end) as name,
        count(*) as number
        from student
        group by clazz_id
        order by number desc
    </select>
    <select id="getStudentDegreeData" resultType="java.util.Map">
        select
        (case
        when degree = 1 then '大专'
        when degree = 2 then '本科'
        when degree = 3 then '硕士'
        when degree = 4 then '博士'
        else '其他' end) as name,
        count(*) as value
        from student
        group by degree
        order by value desc
    </select>
</mapper>